/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    SHOULDER: THREE.Mesh
  }
  materials: {
    ['Brushed Metal']: THREE.MeshStandardMaterial
  }
}

export function Shoulder(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/glb/shoulder.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.SHOULDER.geometry}
        material={materials['Brushed Metal']}
        position={[0, 1.529, -0.329]}
        rotation={[-0.227, 0, 0]}
        scale={1.004}
      />
    </group>
  )
}

useGLTF.preload('/glb/shoulder.glb')
