/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    FOOT: THREE.Mesh
  }
  materials: {
    ['Brushed Metal']: THREE.MeshStandardMaterial
  }
}

export function Foot(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/glb/foot.glb') as GLTFResult

  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.FOOT.geometry}
        position={[0.216, -0.134, 0.64]}
        rotation={[-2.605, 0.1, 0.171]}
        scale={[1.004, 1.004, 0.937]}>
        <meshStandardMaterial attach='material' color='#BBB' metalness={0.5} roughness={0.1} />
      </mesh>
    </group>
  )
}

useGLTF.preload('/glb/foot.glb')
