/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Sphere002: THREE.Mesh
    Sphere002_1: THREE.Mesh
    Sphere002_2: THREE.Mesh
    Sphere002_3: THREE.Mesh
  }
  materials: {
    ['Car Paint 8']: THREE.MeshPhysicalMaterial
    ['Material.011']: THREE.MeshStandardMaterial
    ['Car Paint 2']: THREE.MeshPhysicalMaterial
    ['Brushed Metal']: THREE.MeshStandardMaterial
  }
}

export function Leg(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/glb/leg.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group position={[-0.395, 0.259, 0.262]} rotation={[-1.039, 0.038, -0.159]} scale={0.41}>
        <mesh castShadow receiveShadow geometry={nodes.Sphere002.geometry} material={materials['Car Paint 8']} />
        <mesh castShadow receiveShadow geometry={nodes.Sphere002_1.geometry} material={materials['Material.011']} />
        <mesh castShadow receiveShadow geometry={nodes.Sphere002_2.geometry} material={materials['Car Paint 2']} />
        <mesh castShadow receiveShadow geometry={nodes.Sphere002_3.geometry} material={materials['Brushed Metal']} />
      </group>
    </group>
  )
}

useGLTF.preload('/glb/leg.glb')
