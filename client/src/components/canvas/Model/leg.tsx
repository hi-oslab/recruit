/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cube004: THREE.Mesh
    Cube004_1: THREE.Mesh
    Cube004_2: THREE.Mesh
    Cube004_3: THREE.Mesh
  }
  materials: {
    ['Brushed Metal']: THREE.MeshStandardMaterial
    ['Car Paint 2']: THREE.MeshStandardMaterial
    ['Material.011']: THREE.MeshStandardMaterial
    ['Car Paint 8']: THREE.MeshStandardMaterial
  }
}

export function Leg(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/glb/leg.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group position={[0, 1.529, -0.329]} rotation={[-0.227, 0, 0]} scale={1.004}>
        <mesh castShadow receiveShadow geometry={nodes.Cube004.geometry} material={materials['Brushed Metal']} />
        <mesh castShadow receiveShadow geometry={nodes.Cube004_1.geometry} material={materials['Car Paint 2']} />
        <mesh castShadow receiveShadow geometry={nodes.Cube004_2.geometry} material={materials['Material.011']} />
        <mesh castShadow receiveShadow geometry={nodes.Cube004_3.geometry} material={materials['Car Paint 8']} />
      </group>
    </group>
  )
}

useGLTF.preload('/glb/leg.glb')
