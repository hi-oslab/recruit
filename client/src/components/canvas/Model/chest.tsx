/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Sphere003: THREE.Mesh
    Sphere003_1: THREE.Mesh
    Sphere003_2: THREE.Mesh
    Sphere003_3: THREE.Mesh
    Sphere003_4: THREE.Mesh
    Sphere003_5: THREE.Mesh
    Sphere003_6: THREE.Mesh
  }
  materials: {
    ['Material.006']: THREE.MeshPhysicalMaterial
    ['Car Paint 9.001']: THREE.MeshPhysicalMaterial
    ['Material.001']: THREE.MeshStandardMaterial
    ['Crystal 3']: THREE.MeshPhysicalMaterial
    ['Material.016']: THREE.MeshStandardMaterial
    ['Crystal 10']: THREE.MeshPhysicalMaterial
    ['Car Paint 9.002']: THREE.MeshPhysicalMaterial
  }
}

export function Chest(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/glb/chest.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group position={[0.026, 1.681, 0.13]} rotation={[0.035, 0, 0]} scale={[0.778, 0.902, 0.295]}>
        <mesh castShadow receiveShadow geometry={nodes.Sphere003.geometry} material={materials['Material.006']} />
        <mesh castShadow receiveShadow geometry={nodes.Sphere003_1.geometry} material={materials['Car Paint 9.001']} />
        <mesh castShadow receiveShadow geometry={nodes.Sphere003_2.geometry} material={materials['Material.001']} />
        <mesh castShadow receiveShadow geometry={nodes.Sphere003_3.geometry} material={materials['Crystal 3']} />
        <mesh castShadow receiveShadow geometry={nodes.Sphere003_4.geometry} material={materials['Material.016']} />
        <mesh castShadow receiveShadow geometry={nodes.Sphere003_5.geometry} material={materials['Crystal 10']} />
        <mesh castShadow receiveShadow geometry={nodes.Sphere003_6.geometry} material={materials['Car Paint 9.002']} />
      </group>
    </group>
  )
}

useGLTF.preload('/glb/chest.glb')
