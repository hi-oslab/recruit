/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    line1: THREE.Mesh
    line2: THREE.Mesh
    line4: THREE.Mesh
    line3: THREE.Mesh
    OSL: THREE.Mesh
  }
  materials: {
    ['Car Paint 6']: THREE.MeshPhysicalMaterial
    ['Material.015']: THREE.MeshStandardMaterial
    ['Scratched Plastic 6']: THREE.MeshStandardMaterial
    ['Car Paint 3']: THREE.MeshPhysicalMaterial
    ['Material.018']: THREE.MeshStandardMaterial
  }
}

export function Curves(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/glb/curves.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.line1.geometry}
        material={materials['Car Paint 6']}
        position={[-5.779, 6.288, 1.596]}
        rotation={[0.004, 0.29, 1.489]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.line2.geometry}
        material={materials['Material.015']}
        position={[-2.928, 5.005, 0.168]}
        rotation={[0, 0, -1.03]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.line4.geometry}
        material={materials['Scratched Plastic 6']}
        position={[-2.797, 5.933, -0.652]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.line3.geometry}
        material={materials['Car Paint 3']}
        position={[-2.406, 5.26, 0.095]}
        rotation={[0, 0, -1.121]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.OSL.geometry}
        material={materials['Material.018']}
        position={[-0.018, 2.309, 0.066]}
        rotation={[1.565, -1.121, 0.094]}
        scale={0.049}
      />
    </group>
  )
}

useGLTF.preload('/glb/curves.glb')
