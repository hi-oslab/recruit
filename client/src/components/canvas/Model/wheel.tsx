/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cylinder003: THREE.Mesh
    Cylinder003_1: THREE.Mesh
  }
  materials: {
    ['Material.002']: THREE.MeshPhysicalMaterial
    ['Car Paint 9']: THREE.MeshPhysicalMaterial
  }
}

export function Wheel(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/glb/wheel.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group position={[0.216, -0.134, 0.64]} rotation={[0.542, -0.1, -0.164]} scale={[0.972, 0.645, 0.645]}>
        <mesh castShadow receiveShadow geometry={nodes.Cylinder003.geometry} material={materials['Material.002']} />
        <mesh castShadow receiveShadow geometry={nodes.Cylinder003_1.geometry} material={materials['Car Paint 9']} />
      </group>
    </group>
  )
}

useGLTF.preload('/glb/wheel.glb')
