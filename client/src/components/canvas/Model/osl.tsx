/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    OSL: THREE.Mesh
  }
  materials: {
    ['Material.018']: THREE.MeshStandardMaterial
  }
}

export function Osl(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/glb/osl.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.OSL.geometry}
        material={materials['Material.018']}
        position={[-0.018, 2.309, 0.066]}
        rotation={[1.565, -1.121, 0.094]}
        scale={0.049}
      />
    </group>
  )
}

useGLTF.preload('/glb/osl.glb')
