/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cube: THREE.Mesh
    Cube_1: THREE.Mesh
    Cube_2: THREE.Mesh
    Cube_3: THREE.Mesh
    Cube_4: THREE.Mesh
  }
  materials: {
    ['Car Paint 9']: THREE.MeshPhysicalMaterial
    ['Material.007']: THREE.MeshStandardMaterial
    Material: THREE.MeshStandardMaterial
    ['Material.009']: THREE.MeshStandardMaterial
    ['Material.006']: THREE.MeshPhysicalMaterial
  }
}

export function Head(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/glb/head.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group position={[0, 4.544, -1.126]} rotation={[-0.208, 0, 0]} scale={1.004}>
        <mesh castShadow receiveShadow geometry={nodes.Cube.geometry} material={materials['Car Paint 9']} />
        <mesh castShadow receiveShadow geometry={nodes.Cube_1.geometry} material={materials['Material.007']} />
        <mesh castShadow receiveShadow geometry={nodes.Cube_2.geometry} material={materials.Material} />
        <mesh castShadow receiveShadow geometry={nodes.Cube_3.geometry} material={materials['Material.009']} />
        <mesh castShadow receiveShadow geometry={nodes.Cube_4.geometry} material={materials['Material.006']} />
      </group>
    </group>
  )
}

useGLTF.preload('/glb/head.glb')
