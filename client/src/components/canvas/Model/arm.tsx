/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cube006: THREE.Mesh
    Cube006_1: THREE.Mesh
  }
  materials: {
    ['Material.013']: THREE.MeshStandardMaterial
    ['Material.008']: THREE.MeshStandardMaterial
  }
}

export function Arm(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/glb/arm.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <group position={[-2.843, -1.152, -0.002]} rotation={[0.049, 1.025, 0.794]} scale={1.004}>
        <mesh castShadow receiveShadow geometry={nodes.Cube006.geometry} material={materials['Material.013']} />
        <mesh castShadow receiveShadow geometry={nodes.Cube006_1.geometry} material={materials['Material.008']} />
      </group>
    </group>
  )
}

useGLTF.preload('/glb/arm.glb')
